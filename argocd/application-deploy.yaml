apiVersion: v1
kind: Secret
metadata:
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-sample-spring-boot
stringData:
  database-password: password
  database-user: freelancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-sample-spring-boot
spec:
  ports:
  - name: web
    port: 8080
    targetPort: 8080
  selector:
    name: argocd-sample-spring-boot
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-sample-spring-boot
spec:
  host: ""
  to:
    kind: Service
    name: argocd-sample-spring-boot
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-sample-spring-boot
spec:
  replicas: 1
  selector:
    name: argocd-sample-spring-boot
  strategy: null
  template:
    metadata:
      labels:
        name: argocd-sample-spring-boot
      name: argocd-sample-spring-boot
    spec:
      containers:
      - env:
        - name: PG_HOST
          value: argocd-postgresql
        - name: PG_DB
          value: freelancerdb
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: argocd-sample-spring-boot
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: argocd-sample-spring-boot
        image: image-registry.openshift-image-registry.svc:5000/userX-development/pipeline-practice-java:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 3
        name: argocd-sample-spring-boot
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 3
          timeoutSeconds: 3
        resources:
          limits:
            memory: 512Mi
  triggers:
  - type: ConfigChange
  type: Rolling
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-postgresql
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: Exposes the database server
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-postgresql
spec:
  ports:
  - name: argocd-postgresql
    port: 5432
    targetPort: 5432
  selector:
    name: argocd-postgresql
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    description: Defines how to deploy the database
    template.alpha.openshift.io/wait-for-ready: "true"
  labels:
    app: argocd-sample-spring-boot
    template: argocd-sample-spring-boot
  name: argocd-postgresql
spec:
  replicas: 1
  selector:
    name: argocd-postgresql
  strategy:
    recreateParams:
      post:
        execNewPod:
          command:
          - /bin/bash
          - -c
          - sleep 10 && curl https://raw.githubusercontent.com/mosuke5/openshift-pipeline-practice-java/master/etc/testdata.sql
            -o /tmp/testdata.sql && PGPASSWORD=password psql -U freelancer -d freelancerdb
            -h $POSTGRESQL_SERVICE_HOST -f /tmp/testdata.sql
          containerName: argocd-postgresql
        failurePolicy: Abort
      timeoutSeconds: 600
    type: Recreate
  template:
    metadata:
      labels:
        name: argocd-postgresql
      name: argocd-postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: argocd-sample-spring-boot
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: argocd-sample-spring-boot
        - name: POSTGRESQL_DATABASE
          value: freelancerdb
        image: ' '
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          initialDelaySeconds: 120
          timeoutSeconds: 10
        name: argocd-postgresql
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: argocd-postgresql-data
      volumes:
      - name: argocd-postgresql-data
        persistentVolumeClaim:
          claimName: argocd-postgresql
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - argocd-postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:10
        namespace: openshift
    type: ImageChange
  - type: ConfigChange